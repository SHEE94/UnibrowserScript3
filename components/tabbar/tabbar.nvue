<template>
	<view>
		<view class="tab-bar-content">
			<view class="menu-item"><text class="cc-font menu-text" @click="forward()">&#xe608;</text></view>
			<view class="menu-item">
				<view class="menu-text url-content">
					<view class="bri cc-font" @click="openBackground()"><text class="text">{{wvCount}}</text></view>
				</view>

				<!-- <text class="cc-font menu-text" @click="openBackground()">&#xe612;</text> -->
			</view>
			<view class="menu-item title-content">
				<text class="menu-text url-text" @click="openSearch()">{{ title | textOver }}</text>
			</view>
			<view class="menu-item"><text class="cc-font menu-text" @click="otHome()">&#xe617;</text></view>
			<view class="menu-item"><text class="cc-font menu-text" @click="openMenu()">&#xe654;</text></view>
		</view>
	</view>
</template>

<script>
	import {
		EVENT_TYPE
	} from '@/libs/tools/types.js'
	const app = getApp();
	export default {
		name: 'tabbar',
		data() {
			return {
				title: '',
				wvCount: 1,
			};
		},
		created() {
			const webview = app.globalData.webview;

			webview.on(EVENT_TYPE['loading'], wv => {
				this.getTitle(wv)
			});

			webview.state.getData('activeWebview', (activeWebview) => {
				if (activeWebview) {
					activeWebview.addEventListener('titleUpdate', (e) => {
						this.url = activeWebview.getURL()
						this.title = e.title
					}, false);
					this.url = activeWebview.getURL()
				}
			})

			webview.on(EVENT_TYPE['ACTIVE-WEBVIEW'], () => {
				this.wvCount = webview.webviews.length;
			})
		},
		filters: {
			textOver(text = '') {
				if (text.length > 5) {
					return text.slice(0, 4) + '...';
				}
				return text || '新标签页';
			}
		},
		methods: {
			getTitle(webview) {
				this.url = webview.getURL();
				this.title = webview.getTitle() || '新标签页';
			},
			openMenu() {
				// 网页设置信息
				app.globalData.webview.Tools.sendStatisticsInfo()
				const subNVue = uni.getSubNVueById('popup');
				subNVue.show('', 0, function() {
					uni.$emit('open-menu', 1);
				});
			},
			openBackground() {
				const subNVue = uni.getSubNVueById('popup');
				subNVue.show('', 0, function() {
					uni.$emit('open-menu', 2);
				});
			},
			otHome() {
				uni.$emit('to-home');
			},
			forward() {
				uni.$emit('forward');
			},
			openSearch() {

				this.url = app.globalData.webview.activeWebview.getURL()
				uni.navigateTo({
					url: '/pages/search/search?url=' + encodeURIComponent(this.url)
				});
			}
		}
	};
</script>

<style lang="scss">
	.tab-bar-content {
		position: fixed;
		bottom: 0;
		left: 0;
		right: 0;
		height: 44px;
		background-color: #eee;
		border-top: 1px solid $uni-border-color;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		padding: 0 15px;

		.menu-text {
			font-size: 25px;
			flex: 1;
			color: #353535;
			position: relative;
			width: 60px;
			height: 40px;
			line-height: 40px;
			text-align: center;

			&:active {
				background-color: rgba($color: #cccccc, $alpha: 0.1);

			}


		}

		.menu-item {
			position: relative;

		}

		.url-content {
			justify-content: center;
			align-items: center;
			// height: 30px;
		}

		
		.bri {
			border: 1px solid #353535;
			width: 25px;
			height: 25px;
			align-items: center;
			justify-content: center;
			border-radius: 10px 0px 10px 0px;

			.text {
				font-size: 15px;
				text-align: center;
			}
		}

		.url-text {
			width: 100px;
			font-size: 17px;
			line-height: 30px;
		}
		.title-content {
			background-color: #dddddd;
			height: 30px;
			border-radius: 50px;
		}
	}
</style>